version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_users_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
      
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network

  db-service:
    build: ./db-service
    container_name: db-service
    environment:
      DATABASE_URL: postgres://user:user@postgres:5432/test_users_db
    ports:
      - "50051:50051"
    depends_on:
      - postgres
      - redis
    networks:
      - app_network

  api-service:
    build: ./api-service
    container_name: api-service
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      - db-service

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: 
